var data = {lines:[
{"lineNum":"    1","line":"#![allow(clippy::cast_ptr_alignment)]"},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"use crate::{"},
{"lineNum":"    4","line":"    memory::{DynamicMemory, StaticMemory},"},
{"lineNum":"    5","line":"    structures::TypedIndex,"},
{"lineNum":"    6","line":"    types::{ImportedMemoryIndex, LocalMemoryIndex, LocalTableIndex},"},
{"lineNum":"    7","line":"    units::Pages,"},
{"lineNum":"    8","line":"    vm,"},
{"lineNum":"    9","line":"};"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"// +*****************************+"},
{"lineNum":"   12","line":"// |       LOCAL MEMORIES        |"},
{"lineNum":"   13","line":"// +*****************************+"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"pub unsafe extern \"C\" fn local_static_memory_grow(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   16","line":"    ctx: &mut vm::Ctx,"},
{"lineNum":"   17","line":"    memory_index: LocalMemoryIndex,"},
{"lineNum":"   18","line":"    delta: Pages,"},
{"lineNum":"   19","line":") -> i32 {"},
{"lineNum":"   20","line":"    let local_memory = *ctx.internal.memories.add(memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   21","line":"    let memory = (*local_memory).memory as *mut StaticMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"    let ret = match (*memory).grow(delta, &mut *local_memory) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   24","line":"        Ok(old) => old.0 as i32,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   25","line":"        Err(_) => -1,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   26","line":"    };","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"    ctx.internal.memory_base = (*local_memory).base;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"    ctx.internal.memory_bound = (*local_memory).bound;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"    ret","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   32","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"pub unsafe extern \"C\" fn local_static_memory_size(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   35","line":"    ctx: &vm::Ctx,"},
{"lineNum":"   36","line":"    memory_index: LocalMemoryIndex,"},
{"lineNum":"   37","line":") -> Pages {"},
{"lineNum":"   38","line":"    let local_memory = *ctx.internal.memories.add(memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   39","line":"    let memory = (*local_memory).memory as *mut StaticMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"    (*memory).size()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   42","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"pub unsafe extern \"C\" fn local_dynamic_memory_grow(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   45","line":"    ctx: &mut vm::Ctx,"},
{"lineNum":"   46","line":"    memory_index: LocalMemoryIndex,"},
{"lineNum":"   47","line":"    delta: Pages,"},
{"lineNum":"   48","line":") -> i32 {"},
{"lineNum":"   49","line":"    let local_memory = *ctx.internal.memories.add(memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   50","line":"    let memory = (*local_memory).memory as *mut DynamicMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"    let ret = match (*memory).grow(delta, &mut *local_memory) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   53","line":"        Ok(old) => old.0 as i32,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   54","line":"        Err(_) => -1,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   55","line":"    };","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    ctx.internal.memory_base = (*local_memory).base;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   58","line":"    ctx.internal.memory_bound = (*local_memory).bound;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"    ret","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   61","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"pub unsafe extern \"C\" fn local_dynamic_memory_size(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   64","line":"    ctx: &vm::Ctx,"},
{"lineNum":"   65","line":"    memory_index: LocalMemoryIndex,"},
{"lineNum":"   66","line":") -> Pages {"},
{"lineNum":"   67","line":"    let local_memory = *ctx.internal.memories.add(memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   68","line":"    let memory = (*local_memory).memory as *mut DynamicMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"    (*memory).size()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"// +*****************************+"},
{"lineNum":"   74","line":"// |      IMPORTED MEMORIES      |"},
{"lineNum":"   75","line":"// +*****************************+"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"pub unsafe extern \"C\" fn imported_static_memory_grow(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   78","line":"    ctx: &mut vm::Ctx,"},
{"lineNum":"   79","line":"    import_memory_index: ImportedMemoryIndex,"},
{"lineNum":"   80","line":"    delta: Pages,"},
{"lineNum":"   81","line":") -> i32 {"},
{"lineNum":"   82","line":"    let local_memory = *ctx","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   83","line":"        .internal"},
{"lineNum":"   84","line":"        .imported_memories"},
{"lineNum":"   85","line":"        .add(import_memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":"    let memory = (*local_memory).memory as *mut StaticMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    let ret = match (*memory).grow(delta, &mut *local_memory) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   89","line":"        Ok(old) => old.0 as i32,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   90","line":"        Err(_) => -1,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   91","line":"    };","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"    ctx.internal.memory_base = (*local_memory).base;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   94","line":"    ctx.internal.memory_bound = (*local_memory).bound;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"    ret","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   97","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"pub unsafe extern \"C\" fn imported_static_memory_size(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  100","line":"    ctx: &vm::Ctx,"},
{"lineNum":"  101","line":"    import_memory_index: ImportedMemoryIndex,"},
{"lineNum":"  102","line":") -> Pages {"},
{"lineNum":"  103","line":"    let local_memory = *ctx","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  104","line":"        .internal"},
{"lineNum":"  105","line":"        .imported_memories"},
{"lineNum":"  106","line":"        .add(import_memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  107","line":"    let memory = (*local_memory).memory as *mut StaticMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"    (*memory).size()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  110","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"pub unsafe extern \"C\" fn imported_dynamic_memory_grow(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  113","line":"    ctx: &mut vm::Ctx,"},
{"lineNum":"  114","line":"    memory_index: ImportedMemoryIndex,"},
{"lineNum":"  115","line":"    delta: Pages,"},
{"lineNum":"  116","line":") -> i32 {"},
{"lineNum":"  117","line":"    let local_memory = *ctx.internal.imported_memories.add(memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  118","line":"    let memory = (*local_memory).memory as *mut DynamicMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"    let ret = match (*memory).grow(delta, &mut *local_memory) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  121","line":"        Ok(old) => old.0 as i32,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  122","line":"        Err(_) => -1,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  123","line":"    };","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":""},
{"lineNum":"  125","line":"    ctx.internal.memory_base = (*local_memory).base;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  126","line":"    ctx.internal.memory_bound = (*local_memory).bound;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"    ret","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  129","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"pub unsafe extern \"C\" fn imported_dynamic_memory_size(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  132","line":"    ctx: &vm::Ctx,"},
{"lineNum":"  133","line":"    memory_index: ImportedMemoryIndex,"},
{"lineNum":"  134","line":") -> Pages {"},
{"lineNum":"  135","line":"    let local_memory = *ctx.internal.imported_memories.add(memory_index.index());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  136","line":"    let memory = (*local_memory).memory as *mut DynamicMemory;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"    (*memory).size()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  139","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  140","line":""},
{"lineNum":"  141","line":"// +*****************************+"},
{"lineNum":"  142","line":"// |        LOCAL TABLES         |"},
{"lineNum":"  143","line":"// +*****************************+"},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"pub unsafe extern \"C\" fn local_table_grow("},
{"lineNum":"  146","line":"    ctx: &mut vm::Ctx,"},
{"lineNum":"  147","line":"    table_index: LocalTableIndex,"},
{"lineNum":"  148","line":"    delta: u32,"},
{"lineNum":"  149","line":") -> i32 {"},
{"lineNum":"  150","line":"    let _ = table_index;"},
{"lineNum":"  151","line":"    let _ = delta;"},
{"lineNum":"  152","line":"    let _ = ctx;"},
{"lineNum":"  153","line":"    unimplemented!(\"vmcalls::local_table_grow\")"},
{"lineNum":"  154","line":"}"},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"pub unsafe extern \"C\" fn local_table_size(ctx: &vm::Ctx, table_index: LocalTableIndex) -> u32 {"},
{"lineNum":"  157","line":"    let _ = table_index;"},
{"lineNum":"  158","line":"    let _ = ctx;"},
{"lineNum":"  159","line":"    unimplemented!(\"vmcalls::local_table_size\")"},
{"lineNum":"  160","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "compile_debug", "date" : "2019-11-28 11:37:30", "instrumented" : 66, "covered" : 0,};
var merged_data = [];
