var data = {lines:[
{"lineNum":"    1","line":"#include \"object_loader.hh\""},
{"lineNum":"    2","line":"#include <iostream>"},
{"lineNum":"    3","line":"#include <memory>"},
{"lineNum":"    4","line":"#include <setjmp.h>"},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"extern \"C\" void __register_frame(uint8_t *);"},
{"lineNum":"    7","line":"extern \"C\" void __deregister_frame(uint8_t *);"},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"MemoryManager::~MemoryManager() {","class":"lineCov","hits":"4","order":"765","possible_hits":"4",},
{"lineNum":"   10","line":"  deregisterEHFrames();","class":"lineCov","hits":"1","order":"767","possible_hits":"1",},
{"lineNum":"   11","line":"  // Deallocate all of the allocated memory."},
{"lineNum":"   12","line":"  callbacks.dealloc_memory(code_section.base, code_section.size);","class":"lineCov","hits":"2","order":"771","possible_hits":"2",},
{"lineNum":"   13","line":"  callbacks.dealloc_memory(read_section.base, read_section.size);","class":"lineCov","hits":"2","order":"780","possible_hits":"2",},
{"lineNum":"   14","line":"  callbacks.dealloc_memory(readwrite_section.base, readwrite_section.size);","class":"lineCov","hits":"2","order":"781","possible_hits":"2",},
{"lineNum":"   15","line":"}","class":"linePartCov","hits":"2","order":"766","possible_hits":"4",},
{"lineNum":"   16","line":"void unwinding_setjmp(jmp_buf stack_out, void (*func)(void *), void *userdata) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   17","line":"  if (setjmp(stack_out)) {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"  } else {"},
{"lineNum":"   20","line":"    func(userdata);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   21","line":"  }"},
{"lineNum":"   22","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"[[noreturn]] void unwinding_longjmp(jmp_buf stack_in) { longjmp(stack_in, 42); }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"struct UnwindPoint {","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   27","line":"  UnwindPoint *prev;"},
{"lineNum":"   28","line":"  jmp_buf stack;"},
{"lineNum":"   29","line":"  std::function<void()> *f;"},
{"lineNum":"   30","line":"  std::unique_ptr<WasmException> exception;"},
{"lineNum":"   31","line":"};"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"static thread_local UnwindPoint *unwind_state = nullptr;"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"static void unwind_payload(void *_point) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   36","line":"  UnwindPoint *point = (UnwindPoint *)_point;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   37","line":"  (*point->f)();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   38","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"void catch_unwind(std::function<void()> &&f) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   41","line":"  UnwindPoint current;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   42","line":"  current.prev = unwind_state;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":"  current.f = &f;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   44","line":"  unwind_state = &current;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"  unwinding_setjmp(current.stack, unwind_payload, (void *)&current);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"  unwind_state = current.prev;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   49","line":"  if (current.exception) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   50","line":"    throw std::move(current.exception);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   51","line":"  }"},
{"lineNum":"   52","line":"}","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"void unsafe_unwind(WasmException *exception) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   55","line":"  UnwindPoint *state = unwind_state;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":"  if (state) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   57","line":"    state->exception.reset(exception);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   58","line":"    unwinding_longjmp(state->stack);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   59","line":"  } else {"},
{"lineNum":"   60","line":"    abort();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   61","line":"  }"},
{"lineNum":"   62","line":"}"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"uint8_t *MemoryManager::allocateCodeSection(uintptr_t size, unsigned alignment,"},
{"lineNum":"   65","line":"                                            unsigned section_id,"},
{"lineNum":"   66","line":"                                            llvm::StringRef section_name) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   67","line":"  return allocate_bump(code_section, code_bump_ptr, size, alignment);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   68","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"uint8_t *MemoryManager::allocateDataSection(uintptr_t size, unsigned alignment,"},
{"lineNum":"   71","line":"                                            unsigned section_id,"},
{"lineNum":"   72","line":"                                            llvm::StringRef section_name,"},
{"lineNum":"   73","line":"                                            bool read_only) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   74","line":"  // Allocate from the read-only section or the read-write section, depending"},
{"lineNum":"   75","line":"  // on if this allocation should be read-only or not."},
{"lineNum":"   76","line":"  uint8_t *ret;"},
{"lineNum":"   77","line":"  if (read_only) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   78","line":"    ret = allocate_bump(read_section, read_bump_ptr, size, alignment);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   79","line":"  } else {"},
{"lineNum":"   80","line":"    ret = allocate_bump(readwrite_section, readwrite_bump_ptr, size, alignment);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   81","line":"  }"},
{"lineNum":"   82","line":"  if (section_name.equals(llvm::StringRef(\"__llvm_stackmaps\")) ||","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   83","line":"      section_name.equals(llvm::StringRef(\".llvm_stackmaps\"))) {"},
{"lineNum":"   84","line":"    stack_map_ptr = ret;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   85","line":"    stack_map_size = size;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":"  }"},
{"lineNum":"   87","line":"  return ret;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   88","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"void MemoryManager::reserveAllocationSpace(uintptr_t code_size,"},
{"lineNum":"   91","line":"                                           uint32_t code_align,"},
{"lineNum":"   92","line":"                                           uintptr_t read_data_size,"},
{"lineNum":"   93","line":"                                           uint32_t read_data_align,"},
{"lineNum":"   94","line":"                                           uintptr_t read_write_data_size,"},
{"lineNum":"   95","line":"                                           uint32_t read_write_data_align) {","class":"lineCov","hits":"2","order":"608","possible_hits":"2",},
{"lineNum":"   96","line":"  auto aligner = [](uintptr_t ptr, size_t align) {","class":"lineCov","hits":"1","order":"612","possible_hits":"1",},
{"lineNum":"   97","line":"    if (ptr == 0) {","class":"lineCov","hits":"1","order":"613","possible_hits":"1",},
{"lineNum":"   98","line":"      return align;","class":"lineCov","hits":"1","order":"648","possible_hits":"1",},
{"lineNum":"   99","line":"    }"},
{"lineNum":"  100","line":"    return (ptr + align - 1) & ~(align - 1);","class":"lineCov","hits":"4","order":"614","possible_hits":"4",},
{"lineNum":"  101","line":"  };","class":"linePartCov","hits":"1","order":"615","possible_hits":"2",},
{"lineNum":"  102","line":"  uint8_t *code_ptr_out = nullptr;","class":"lineCov","hits":"1","order":"609","possible_hits":"1",},
{"lineNum":"  103","line":"  size_t code_size_out = 0;","class":"lineCov","hits":"1","order":"610","possible_hits":"1",},
{"lineNum":"  104","line":"  auto code_result ="},
{"lineNum":"  105","line":"      callbacks.alloc_memory(aligner(code_size, 4096), PROTECT_READ_WRITE,","class":"lineCov","hits":"2","order":"611","possible_hits":"2",},
{"lineNum":"  106","line":"                             &code_ptr_out, &code_size_out);"},
{"lineNum":"  107","line":"  assert(code_result == RESULT_OK);","class":"lineCov","hits":"1","order":"634","possible_hits":"1",},
{"lineNum":"  108","line":"  code_section = Section{code_ptr_out, code_size_out};","class":"lineCov","hits":"1","order":"635","possible_hits":"1",},
{"lineNum":"  109","line":"  code_bump_ptr = (uintptr_t)code_ptr_out;","class":"lineCov","hits":"1","order":"636","possible_hits":"1",},
{"lineNum":"  110","line":"  code_start_ptr = (uintptr_t)code_ptr_out;","class":"lineCov","hits":"1","order":"637","possible_hits":"1",},
{"lineNum":"  111","line":"  this->code_size = code_size;","class":"lineCov","hits":"1","order":"638","possible_hits":"1",},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"  uint8_t *read_ptr_out = nullptr;","class":"lineCov","hits":"1","order":"639","possible_hits":"1",},
{"lineNum":"  114","line":"  size_t read_size_out = 0;","class":"lineCov","hits":"1","order":"640","possible_hits":"1",},
{"lineNum":"  115","line":"  auto read_result ="},
{"lineNum":"  116","line":"      callbacks.alloc_memory(aligner(read_data_size, 4096), PROTECT_READ_WRITE,","class":"lineCov","hits":"2","order":"641","possible_hits":"2",},
{"lineNum":"  117","line":"                             &read_ptr_out, &read_size_out);"},
{"lineNum":"  118","line":"  assert(read_result == RESULT_OK);","class":"lineCov","hits":"1","order":"642","possible_hits":"1",},
{"lineNum":"  119","line":"  read_section = Section{read_ptr_out, read_size_out};","class":"lineCov","hits":"1","order":"643","possible_hits":"1",},
{"lineNum":"  120","line":"  read_bump_ptr = (uintptr_t)read_ptr_out;","class":"lineCov","hits":"1","order":"644","possible_hits":"1",},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"  uint8_t *readwrite_ptr_out = nullptr;","class":"lineCov","hits":"1","order":"645","possible_hits":"1",},
{"lineNum":"  123","line":"  size_t readwrite_size_out = 0;","class":"lineCov","hits":"1","order":"646","possible_hits":"1",},
{"lineNum":"  124","line":"  auto readwrite_result = callbacks.alloc_memory(","class":"lineCov","hits":"2","order":"647","possible_hits":"2",},
{"lineNum":"  125","line":"      aligner(read_write_data_size, 4096), PROTECT_READ_WRITE,"},
{"lineNum":"  126","line":"      &readwrite_ptr_out, &readwrite_size_out);"},
{"lineNum":"  127","line":"  assert(readwrite_result == RESULT_OK);","class":"lineCov","hits":"1","order":"649","possible_hits":"1",},
{"lineNum":"  128","line":"  readwrite_section = Section{readwrite_ptr_out, readwrite_size_out};","class":"lineCov","hits":"1","order":"650","possible_hits":"1",},
{"lineNum":"  129","line":"  readwrite_bump_ptr = (uintptr_t)readwrite_ptr_out;","class":"lineCov","hits":"1","order":"651","possible_hits":"1",},
{"lineNum":"  130","line":"}","class":"linePartCov","hits":"1","order":"652","possible_hits":"2",},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"bool MemoryManager::needsToReserveAllocationSpace() { return true; }","class":"linePartCov","hits":"3","order":"607","possible_hits":"4",},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"void MemoryManager::registerEHFrames(uint8_t *addr, uint64_t LoadAddr,"},
{"lineNum":"  135","line":"                                     size_t size) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  136","line":"// We don\'t know yet how to do this on Windows, so we hide this on compilation"},
{"lineNum":"  137","line":"// so we can compile and pass spectests on unix systems"},
{"lineNum":"  138","line":"#ifndef _WIN32"},
{"lineNum":"  139","line":"  eh_frame_ptr = addr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  140","line":"  eh_frame_size = size;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  141","line":"  eh_frames_registered = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  142","line":"  callbacks.visit_fde(addr, size, __register_frame);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  143","line":"#endif"},
{"lineNum":"  144","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"void MemoryManager::deregisterEHFrames() {","class":"lineCov","hits":"1","order":"768","possible_hits":"1",},
{"lineNum":"  147","line":"// We don\'t know yet how to do this on Windows, so we hide this on compilation"},
{"lineNum":"  148","line":"// so we can compile and pass spectests on unix systems"},
{"lineNum":"  149","line":"#ifndef _WIN32"},
{"lineNum":"  150","line":"  if (eh_frames_registered) {","class":"lineCov","hits":"2","order":"769","possible_hits":"2",},
{"lineNum":"  151","line":"    callbacks.visit_fde(eh_frame_ptr, eh_frame_size, __deregister_frame);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  152","line":"  }"},
{"lineNum":"  153","line":"#endif"},
{"lineNum":"  154","line":"}","class":"linePartCov","hits":"1","order":"770","possible_hits":"2",},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"bool MemoryManager::finalizeMemory(std::string *ErrMsg) {","class":"lineCov","hits":"1","order":"659","possible_hits":"1",},
{"lineNum":"  157","line":"  auto code_result ="},
{"lineNum":"  158","line":"      callbacks.protect_memory(code_section.base, code_section.size,","class":"lineCov","hits":"2","order":"660","possible_hits":"2",},
{"lineNum":"  159","line":"                               mem_protect_t::PROTECT_READ_EXECUTE);"},
{"lineNum":"  160","line":"  if (code_result != RESULT_OK) {","class":"lineCov","hits":"1","order":"674","possible_hits":"1",},
{"lineNum":"  161","line":"    return false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  162","line":"  }"},
{"lineNum":"  163","line":""},
{"lineNum":"  164","line":"  auto read_result = callbacks.protect_memory(","class":"lineCov","hits":"2","order":"675","possible_hits":"2",},
{"lineNum":"  165","line":"      read_section.base, read_section.size, mem_protect_t::PROTECT_READ);"},
{"lineNum":"  166","line":"  if (read_result != RESULT_OK) {","class":"lineCov","hits":"1","order":"677","possible_hits":"1",},
{"lineNum":"  167","line":"    return false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  168","line":"  }"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"  // The readwrite section is already mapped as read-write."},
{"lineNum":"  171","line":""},
{"lineNum":"  172","line":"  return false;","class":"lineCov","hits":"1","order":"678","possible_hits":"1",},
{"lineNum":"  173","line":"}","class":"linePartCov","hits":"1","order":"679","possible_hits":"2",},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"void MemoryManager::notifyObjectLoaded(llvm::RuntimeDyld &RTDyld,"},
{"lineNum":"  176","line":"                                       const llvm::object::ObjectFile &Obj) {}","class":"linePartCov","hits":"2","order":"657","possible_hits":"3",},
{"lineNum":"  177","line":""},
{"lineNum":"  178","line":"uint8_t *MemoryManager::allocate_bump(Section &section, uintptr_t &bump_ptr,"},
{"lineNum":"  179","line":"                                      size_t size, size_t align) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  180","line":"  auto aligner = [](uintptr_t &ptr, size_t align) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  181","line":"    ptr = (ptr + align - 1) & ~(align - 1);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  182","line":"  };","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  183","line":""},
{"lineNum":"  184","line":"  // Align the bump pointer to the requires alignment."},
{"lineNum":"  185","line":"  aligner(bump_ptr, align);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"  auto ret_ptr = bump_ptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  188","line":"  bump_ptr += size;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"  assert(bump_ptr <= (uintptr_t)section.base + section.size);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"  return (uint8_t *)ret_ptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  193","line":"}","class":"linePartCov","hits":"1","order":"602","possible_hits":"2",},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"struct SymbolLookup : llvm::JITSymbolResolver {","class":"linePartCov","hits":"2","order":"681","possible_hits":"6",},
{"lineNum":"  196","line":"public:"},
{"lineNum":"  197","line":"  SymbolLookup(callbacks_t callbacks) : callbacks(callbacks) {}","class":"linePartCov","hits":"3","order":"601","possible_hits":"4",},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"  void lookup(const LookupSet &symbols, OnResolvedFunction OnResolved) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  200","line":"    LookupResult result;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"    for (auto symbol : symbols) {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  203","line":"      result.emplace(symbol, symbol_lookup(symbol));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  204","line":"    }"},
{"lineNum":"  205","line":""},
{"lineNum":"  206","line":"    OnResolved(result);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  207","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  208","line":""},
{"lineNum":"  209","line":"  llvm::Expected<LookupSet> getResponsibilitySet(const LookupSet &Symbols) {","class":"lineCov","hits":"2","order":"653","possible_hits":"2",},
{"lineNum":"  210","line":"    const std::set<llvm::StringRef> empty;","class":"linePartCov","hits":"2","order":"654","possible_hits":"3",},
{"lineNum":"  211","line":"    return empty;","class":"lineCov","hits":"2","order":"655","possible_hits":"2",},
{"lineNum":"  212","line":"  }","class":"linePartCov","hits":"1","order":"656","possible_hits":"3",},
{"lineNum":"  213","line":""},
{"lineNum":"  214","line":"private:"},
{"lineNum":"  215","line":"  llvm::JITEvaluatedSymbol symbol_lookup(llvm::StringRef name) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  216","line":"    uint64_t addr = callbacks.lookup_vm_symbol(name.data(), name.size());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  217","line":""},
{"lineNum":"  218","line":"    return llvm::JITEvaluatedSymbol(addr, llvm::JITSymbolFlags::None);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  219","line":"  }","class":"linePartCov","hits":"1","order":"599","possible_hits":"2",},
{"lineNum":"  220","line":""},
{"lineNum":"  221","line":"  callbacks_t callbacks;"},
{"lineNum":"  222","line":"};"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"WasmModule::WasmModule(const uint8_t *object_start, size_t object_size,","class":"lineCov","hits":"2","order":"593","possible_hits":"2",},
{"lineNum":"  225","line":"                       callbacks_t callbacks)"},
{"lineNum":"  226","line":"    : memory_manager("},
{"lineNum":"  227","line":"          std::unique_ptr<MemoryManager>(new MemoryManager(callbacks))) {","class":"linePartCov","hits":"3","order":"594","possible_hits":"4",},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"  if (auto created_object_file =","class":"lineCov","hits":"1","order":"597","possible_hits":"1",},
{"lineNum":"  230","line":"          llvm::object::ObjectFile::createObjectFile(llvm::MemoryBufferRef("},
{"lineNum":"  231","line":"              llvm::StringRef((const char *)object_start, object_size),"},
{"lineNum":"  232","line":"              \"object\"))) {","class":"linePartCov","hits":"2","order":"596","possible_hits":"3",},
{"lineNum":"  233","line":"    object_file = cantFail(std::move(created_object_file));","class":"linePartCov","hits":"4","order":"598","possible_hits":"5",},
{"lineNum":"  234","line":"    SymbolLookup symbol_resolver(callbacks);","class":"linePartCov","hits":"1","order":"600","possible_hits":"2",},
{"lineNum":"  235","line":"    runtime_dyld = std::unique_ptr<llvm::RuntimeDyld>(","class":"lineCov","hits":"3","order":"604","possible_hits":"3",},
{"lineNum":"  236","line":"        new llvm::RuntimeDyld(*memory_manager, symbol_resolver));","class":"linePartCov","hits":"3","order":"603","possible_hits":"4",},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"    runtime_dyld->setProcessAllSections(true);","class":"lineCov","hits":"1","order":"605","possible_hits":"1",},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":"    runtime_dyld->loadObject(*object_file);","class":"lineCov","hits":"3","order":"606","possible_hits":"3",},
{"lineNum":"  241","line":"    runtime_dyld->finalizeWithMemoryManagerLocking();","class":"lineCov","hits":"1","order":"658","possible_hits":"1",},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"    if (runtime_dyld->hasError()) {","class":"lineCov","hits":"2","order":"680","possible_hits":"2",},
{"lineNum":"  244","line":"      _init_failed = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  245","line":"      return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  246","line":"    }"},
{"lineNum":"  247","line":"  } else {"},
{"lineNum":"  248","line":"    _init_failed = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  249","line":"  }"},
{"lineNum":"  250","line":"}","class":"linePartCov","hits":"1","order":"682","possible_hits":"3",},
{"lineNum":"  251","line":""},
{"lineNum":"  252","line":"void *WasmModule::get_func(llvm::StringRef name) const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  253","line":"  auto symbol = runtime_dyld->getSymbol(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  254","line":"  return (void *)symbol.getAddress();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  255","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  256","line":""},
{"lineNum":"  257","line":"uint8_t *WasmModule::get_stack_map_ptr() const {","class":"lineCov","hits":"1","order":"694","possible_hits":"1",},
{"lineNum":"  258","line":"  return memory_manager->get_stack_map_ptr();","class":"lineCov","hits":"1","order":"695","possible_hits":"1",},
{"lineNum":"  259","line":"}","class":"linePartCov","hits":"1","order":"697","possible_hits":"2",},
{"lineNum":"  260","line":""},
{"lineNum":"  261","line":"size_t WasmModule::get_stack_map_size() const {","class":"lineCov","hits":"1","order":"702","possible_hits":"1",},
{"lineNum":"  262","line":"  return memory_manager->get_stack_map_size();","class":"lineCov","hits":"1","order":"703","possible_hits":"1",},
{"lineNum":"  263","line":"}","class":"linePartCov","hits":"1","order":"705","possible_hits":"2",},
{"lineNum":"  264","line":""},
{"lineNum":"  265","line":"uint8_t *WasmModule::get_code_ptr() const {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  266","line":"  return memory_manager->get_code_ptr();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  267","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  268","line":""},
{"lineNum":"  269","line":"size_t WasmModule::get_code_size() const {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  270","line":"  return memory_manager->get_code_size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  271","line":"}","class":"linePartCov","hits":"5","order":"1","possible_hits":"8",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "compile_debug", "date" : "2019-11-28 11:37:30", "instrumented" : 150, "covered" : 73,};
var merged_data = [];
