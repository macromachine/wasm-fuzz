var data = {lines:[
{"lineNum":"    1","line":"use wasmer_runtime_core::types::Type;"},
{"lineNum":"    2","line":"use wasmparser::{BinaryReaderError, Type as WpType, TypeOrFuncType as WpTypeOrFuncType};"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"pub fn type_to_type(ty: WpType) -> Result<Type, BinaryReaderError> {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    5","line":"    Ok(match ty {","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"    6","line":"        WpType::I32 => Type::I32,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"    7","line":"        WpType::I64 => Type::I64,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    8","line":"        WpType::F32 => Type::F32,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    9","line":"        WpType::F64 => Type::F64,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   10","line":"        WpType::V128 => Type::V128,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   11","line":"        _ => {"},
{"lineNum":"   12","line":"            return Err(BinaryReaderError {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   13","line":"                message: \"that type is not supported as a wasmer type\","},
{"lineNum":"   14","line":"                offset: -1isize as usize,"},
{"lineNum":"   15","line":"            });"},
{"lineNum":"   16","line":"        }"},
{"lineNum":"   17","line":"    })"},
{"lineNum":"   18","line":"}","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"pub fn blocktype_to_type(ty: WpTypeOrFuncType) -> Result<Type, BinaryReaderError> {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   21","line":"    match ty {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   22","line":"        WpTypeOrFuncType::Type(inner_ty) => type_to_type(inner_ty),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   23","line":"        _ => {"},
{"lineNum":"   24","line":"            return Err(BinaryReaderError {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   25","line":"                message:"},
{"lineNum":"   26","line":"                    \"the wasmer llvm backend does not yet support the multi-value return extension\","},
{"lineNum":"   27","line":"                offset: -1isize as usize,"},
{"lineNum":"   28","line":"            });"},
{"lineNum":"   29","line":"        }"},
{"lineNum":"   30","line":"    }"},
{"lineNum":"   31","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "compile_debug", "date" : "2019-11-28 11:37:30", "instrumented" : 14, "covered" : 0,};
var merged_data = [];
